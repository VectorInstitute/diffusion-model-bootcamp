{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Single Table",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/LavaDDPM_single.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--exp_name",
                "movie",
                "--data_path",
                "privLava_data/movie_lens_1m",
                "--file_name",
                "movie.csv",
                "--domain_file_name",
                "movie_domain.json",
                "--save_path",
                "LavaDDPM_single_results/movie",
                "--num_rows",
                "3883"
            ]
        },
        {
            "name": "Python: Multi Table",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/modulated_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--exp_name",
                "multi_gpu",
                "--parent_splitted",
                "0",
                "--child_splitted",
                "0",
                "--path_prefix",
                "privLava_data/California/",
                "--child_csv_name",
                "individual.csv",
                "--parent_csv_name",
                "household.csv",
                "--child_domain_name",
                "individual_domain.json",
                "--parent_domain_name",
                "household_domain.json",
                "--KEY_SCALER",
                "1",
                "--PARENT_SCALER",
                "1",
                "--NUM_CLUSTERS",
                "25",
                "--CLASSIFIER_SCALE",
                "1",
                "--CHILD_PRIMARY_KEY",
                "INDIVIDUAL",
                "--PARENT_PRIMARY_KEY",
                "HOUSEHOLD",
                "--SAMPLE_SCALE",
                "1",
                "--CLUSTER_WITH_CRF",
                "0",
                "--CRF_CKPT_PATH",
                "",
                "--BASE",
                "10",
                "--classifier_steps",
                "2000",
                "--individual_steps",
                "20000",
                "--household_steps",
                "20000",
                "--ih_steps",
                "20000",
                "--PARENT_NAME",
                "household",
                "--CHILD_NAME",
                "individual",
            ]
        },
        {
            "name": "Python: Complex Pipeline",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir",
                "berka/preprocessed",
                "--exp_name",
                "vscode",
                "--classifier_steps",
                "100",
                "--diffusion_steps",
                "2000",
                "--num_timesteps",
                "2000"
            ]
        },
        {
            "name": "Python: Tabsyn Complex Pipeline",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_tabsyn_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir",
                "complex_data/california_20",
                "--working_dir",
                "tabsyn_workspace/debug_california_20",
                "--vae_epochs",
                "1",
                "--classifier_epochs",
                "1",
                "--tabsyn_num_epochs",
                "1",
                "--vae_batch_size",
                "2000",
                "--NUM_CLUSTERS",
                "25",
                "--device",
                "cuda:0",
                "--learn_to_cluster_epochs",
                "500"
            ]
        },
        {
            "name": "Python: Sample Tabsyn Complex Pipeline",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_tabsyn_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir",
                "complex_data/instacart_data_05/preprocessed",
                "--working_dir",
                "tabsyn_workspace/instacart_05",
                "--sample_batch_size",
                "30000",
                "--NUM_MATCHING_CLUSTERS",
                "1",
                "--sample_prefix",
                "debug",
                "--num_steps",
                "50",
                "--sample_only",
                "--classifier_scale",
                "1"
            ]
        },
        {
            "name": "Gen Report",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/gen_report.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--real_data_path",
                "complex_data/california_20/train/individual.csv",
                "--syn_data_path",
                "lavaDDPM_workspace/california_20_train/individual/_final/individual_synthetic.csv",
                "--test_data_path",
                "complex_data/california_20/test/individual.csv",
                "--domain_dict_path",
                "complex_data/california_20/individual_domain.json",
                "--save_path",
                "lavaDDPM_workspace/california_20_train/report",
                "--table_name",
                "individual"
            ]
        },
        {
            "name": "Match tables",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/matching.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir",
                "complex_data/instacart_data_05/preprocessed/train",
                "--NUM_MATCHING_CLUSTERS",
                "1",
                // "--unique_matching",
                "--exp_name",
                "instacart_05_train",
                "--batch_size",
                "1000",
                "--working_dir",
                "lavaDDPM_workspace/instacart_05_train_rematched"
            ]
        },
        {
            "name": "Baseline2",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/baseline2.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir=complex_data/instacart_05/preprocessed/train",
                "--working_dir=baseline2_workspace/instacart_05_train",
                "--synthesizer=ctgan",
                "--batch_size=4000"
            ]
        },
        {
            "name": "movie debug",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir=complex_data/movie_lens/preprocessed/train",
                "--working_dir=lavaDDPM_workspace/movie_lens_debug",
                "--exp_name=movie_lens_debug",
                "--diffusion_steps=1000",
                "--classifier_steps=200",
                "--NUM_CLUSTERS=25",
                "--matching_batch_size=1000",
                "--NUM_MATCHING_CLUSTERS=1",
                "--learn_to_cluster_epochs=0",
                "--PARENT_SCALE=1",
                "--clustering_method=kmeans"
            ]
        },
        {
            "name": "single report debug",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/gen_single_report.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--real_data_path=complex_data/movie_lens/preprocessed/train",
                "--syn_data_path=baseline3_workspace/movie_lens_train/smote",
                "--test_data_path=complex_data/movie_lens/preprocessed/test",
                "--syn_data_type=baseline",
                "--alpha_beta_sample_size=500000",
                "--save_path=baseline4_workspace/movie_lens/smote/single_report",
                "--dcr_batch_size=100"
            ]
        },
        {
            "name": "cal20 debug",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir=complex_data/california_20/train",
                "--working_dir=lavaDDPM_workspace/california_20_train_debug",
                "--exp_name=cal20_debug",
                "--diffusion_steps=1000",
                "--classifier_steps=200",
                "--NUM_CLUSTERS=25",
                "--matching_batch_size=1000",
                "--NUM_MATCHING_CLUSTERS=1",
                "--learn_to_cluster_epochs=0",
                "--PARENT_SCALE=1",
                "--clustering_method=y"
            ]
        },
        {
            "name": "berka debug",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--data_dir=complex_data/berka/preprocessed_renamed",
                "--working_dir=lavaDDPM_workspace/berka_debug",
                "--exp_name=berka_debug",
                "--diffusion_steps=1000",
                "--classifier_steps=200",
                "--NUM_CLUSTERS=1",
                "--matching_batch_size=1000",
                "--NUM_MATCHING_CLUSTERS=1",
                "--learn_to_cluster_epochs=0",
                "--PARENT_SCALE=1",
                "--clustering_method=y"
            ]
        },
        {
            "name": "cleanup debug",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/complex_pipeline.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--config_path=configs/debug.json",
            ]
        },
    ]
}