[project]
name = "diffusion-models-bootcamp"
version = "0.1.0"
description = "Diffusion models for tabular data and time series"
readme = "README.md"
authors = [{name = "Vector AI Engineering", email = "fl4health@vectorinstitute.ai"}]
requires-python = ">=3.11.0,<3.13"
dependencies = [
    "pre-commit>=3.7.0",
    "ipykernel>=6.29.4",
    "xlrd>=2.0.1",
    "gdown>=5.2.0",
    # Linux-only dependencies
    "nvidia-cublas-cu11==11.10.3.66; platform_system == 'Linux'",
    "nvidia-cuda-cupti-cu11==11.7.101; platform_system == 'Linux'",
    "nvidia-cuda-nvrtc-cu11==11.7.99; platform_system == 'Linux'",
    "nvidia-cuda-runtime-cu11==11.7.99; platform_system == 'Linux'",
    "nvidia-cudnn-cu11==8.5.0.96; platform_system == 'Linux'",
    "nvidia-cufft-cu11==10.9.0.58; platform_system == 'Linux'",
    "nvidia-curand-cu11==10.2.10.91; platform_system == 'Linux'",
    "nvidia-cusolver-cu11==11.4.0.1; platform_system == 'Linux'",
    "nvidia-cusparse-cu11==11.7.4.91; platform_system == 'Linux'",
    "nvidia-nccl-cu11==2.14.3; platform_system == 'Linux'",
    "nvidia-nvtx-cu11==11.7.91; platform_system == 'Linux'",
    "faiss-gpu-cu12>=1.11.0; platform_system == 'Linux'",
    # macOS alternative to CUDA - MPS (Metal Performance Shaders)
    "torch>=2.1.0,<2.3.0; platform_system == 'Darwin'",  # macOS builds with MPS support
]

[dependency-groups]
synthcity = [
    "torch>=2.1,<2.3",
    "torchmetrics>=1.0.0",
    "torchtext>=0.15.1",
    "torchtuples>=0.2.0",
    "torchvision>=0.15.1",
    "absl-py==2.1.0",
    "accelerate==0.31.0",
    "aiohttp==3.9.5",
    "aiosignal==1.3.1",
    "alembic==1.13.1",
    "arfpy==0.1.1",
    "async-timeout==4.0.3",
    "attrs==23.2.0",
    "autograd==1.6.2",
    "autograd-gamma==0.5.0",
    "be-great==0.0.7",
    "blis==0.7.11",
    "brotli==1.1.0",
    "catalogue==2.0.10",
    "certifi==2024.6.2",
    "charset-normalizer==3.3.2",
    "cloudpathlib==0.18.1",
    "cloudpickle==2.2.1",
    "colorlog==6.8.2",
    "confection==0.1.5",
    "contourpy==1.2.1",
    "cycler==0.12.1",
    "cymem==2.0.8",
    "datasets==2.20.0",
    "decaf-synthetic-data==0.1.6",
    "dill==0.3.8",
    "fastai==2.7.15",
    "fastcore==1.5.48",
    "fastdownload==0.0.7",
    "fastprogress==1.0.3",
    "feather-format==0.4.1",
    "fflows==0.0.3",
    "filelock==3.15.4",
    "fonttools==4.53.0",
    "formulaic==1.0.1",
    "frozenlist==1.4.1",
    "fsspec==2024.5.0",
    "future==1.0.0",
    "geomloss==0.2.6",
    "greenlet==3.0.3",
    "grpcio==1.64.1",
    "h5py==3.11.0",
    "huggingface-hub==0.23.4",
    "idna==3.7",
    "imbalanced-learn==0.12.3",
    "importlib-metadata==8.0.0",
    "importlib-resources==6.4.0",
    "inflate64==1.0.0",
    "interface-meta==1.3.0",
    "jinja2==3.1.4",
    "joblib==1.4.2",
    "keopscore==2.2.3",
    "kiwisolver==1.4.5",
    "langcodes==3.4.0",
    "language-data==1.2.0",
    "lifelines>=0.29.0,<0.30.0",
    "lightning-utilities==0.11.2",
    "llvmlite==0.43.0",
    "loguru==0.7.2",
    "mako==1.3.5",
    "marisa-trie==1.2.0",
    "markdown==3.6",
    "markdown-it-py==3.0.0",
    "markupsafe==2.1.5",
    "matplotlib==3.9.0",
    "mdurl==0.1.2",
    "monai==1.3.2",
    "multidict==6.0.5",
    "multiprocess==0.70.16",
    "multivolumefile==0.2.3",
    "murmurhash==1.0.10",
    "networkx==2.8.8",
    "nflows==0.14",
    "numba==0.60.0",
    "numpy>=1.26.4,<2.0.0",
    "opacus==1.4.0",
    "opt-einsum==3.3.0",
    "optuna==3.6.1",
    "packaging==24.1",
    "pandas>=2.1.0",
    "patsy==0.5.6",
    "pgmpy==0.1.25",
    "pillow==10.3.0",
    "preshed==3.0.9",
    "protobuf==4.25.3",
    "psutil==6.0.0",
    "py7zr==0.21.0",
    "pyarrow==16.1.0",
    "pyarrow-hotfix==0.6",
    "pybcj==1.0.2",
    "pybind11==2.13.0",
    "pycox==0.2.3",
    "pycryptodomex==3.20.0",
    "pydantic==1.10.17",
    "pygments==2.18.0",
    "pyparsing==3.1.2",
    "pyppmd==1.1.0",
    "python-dateutil==2.9.0.post0",
    "pytorch-lightning==1.9.5",
    "pyts==0.13.0",
    "pytz==2024.1",
    "pyyaml==6.0.1",
    "pyzstd==0.16.0",
    "redis==5.0.6",
    "regex==2024.5.15",
    "requests==2.32.3",
    "rich==13.7.1",
    "safetensors==0.4.3",
    "scikit-learn==1.5.0",
    "scipy==1.13.1",
    "shap==0.45.1",
    "shellingham==1.5.4",
    "six==1.16.0",
    "slicer==0.0.8",
    "smart-open==7.0.4",
    "spacy==3.7.5",
    "spacy-legacy==3.0.12",
    "spacy-loggers==1.0.5",
    "sqlalchemy==2.0.31",
    "srsly==2.4.8",
    "statsmodels==0.14.4",
    "synthcity==0.2.11",
    "tensorboard==2.17.0",
    "tensorboard-data-server==0.7.2",
    "texttable==1.7.0",
    "thinc==8.2.5",
    "threadpoolctl==3.5.0",
    "tokenizers==0.19.1",
    "tqdm==4.66.4",
    "transformers==4.41.2",
    "tsai==0.3.9",
    "typing-extensions==4.12.2",
    "urllib3==1.26.19",
    "wasabi==1.1.3",
    "weasel==0.4.1",
    "werkzeug==3.0.3",
    "wrapt==1.16.0",
    "xgboost>=2.1.0,<3.0.0",
    "xgbse==0.3.3",
    "xxhash==3.4.1",
    "yarl==1.9.4",
    "zipp==3.19.2",
    "category-encoders>=2.6.3",
]

tabsyn = [
    "icecream>=2.1.3",
    "tomli>=2.0.1",
    "tomli-w>=1.0.0",
    "click>=8.1.7",
    "typer>=0.12.3",
]

clavaddpm = [
    "sdv==1.11.0",
    "prdc>=0.2",
]

csdi = [
    "linear-attention-transformer>=0.19.1",
    "wget>=3.2",
]

tsdiff = [
    "seaborn>=0.13.2",
    "gluonts>=0.12.3,<0.13.0",
    "opt-einsum>=3.3.0,<3.4.0",
    "einops>=0.8.0",
    "black>=24.4.2",
    "jupyter>=1.0.0",
    "rich>=13.7.1",
]

# Default dependency groups to be installed
[tool.uv]
default-groups = ["synthcity", "tabsyn", "clavaddpm", "csdi", "tsdiff"]

[tool.ruff]
include = ["*.py", "pyproject.toml", "*.ipynb"]
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ICN", # flake8-import-conventions
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    "W", # pycodestyle
    "N", # pep8-naming
    "ERA", # eradicate
    "PL", # pylint
]
fixable = ["A", "B", "COM", "C4", "RET", "SIM", "ICN", "Q", "RSE", "D", "E", "F", "I", "W", "N", "ERA", "PL"]
ignore = [
    "B905", # `zip()` without an explicit `strict=` parameter
    "E501", # line too long
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "PLR2004", # Replace magic number with named constant
    "PLR0913", # Too many arguments
    "COM812", # Missing trailing comma
]

# Ignore import violations in all `__init__.py` files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.lint.pep8-naming]
ignore-names = ["X*", "setUp"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88
